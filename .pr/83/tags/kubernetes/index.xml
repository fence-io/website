<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Kubernetes on Fence</title><link>https://fence-io.github.io/website/.pr/83/tags/kubernetes/</link><description>Recent content in Kubernetes on Fence</description><generator>Hugo</generator><language>en-us</language><lastBuildDate>Mon, 06 May 2024 00:00:00 +0000</lastBuildDate><atom:link href="https://fence-io.github.io/website/.pr/83/tags/kubernetes/index.xml" rel="self" type="application/rss+xml"/><item><title>Validating Kubernetes resources offline - kubeconform review</title><link>https://fence-io.github.io/website/.pr/83/articles/k8s-resources-validation/kubeconform/</link><pubDate>Mon, 06 May 2024 00:00:00 +0000</pubDate><guid>https://fence-io.github.io/website/.pr/83/articles/k8s-resources-validation/kubeconform/</guid><description>In this article, we will explore kubeconform, the successor to kubeval.
Kubeconform is based on the same principles as kubeval, but it is actively maintained and has some unique features.
Introduction # As the two tools are very similar, I invite you to consult the article on kubeval which also applies to kubeconform.
Resource Schemas # Kubeconform uses JSON schemas to validate (or invalidate) the proposed resources. These JSON schemas are created from the OpenAPI schemas published within the Kubernetes GitHub repository.</description></item><item><title>Validating Kubernetes resources offline - kubectl-validate review</title><link>https://fence-io.github.io/website/.pr/83/articles/k8s-resources-validation/kubectl-validate/</link><pubDate>Sun, 05 May 2024 00:00:00 +0000</pubDate><guid>https://fence-io.github.io/website/.pr/83/articles/k8s-resources-validation/kubectl-validate/</guid><description>Après kubeval et kubeconform, nous allons cette fois ci nous intéresser a kubectl-validate.
Ce dernier outil se distingue des précédents par son approche plus moderne qui n&amp;rsquo;utilise pas les JSON schemas.
Introduction # Tout d&amp;rsquo;abord, je vous invite a consulter l&amp;rsquo;introduction de l&amp;rsquo;article sur kubeval qui décrit la validation hors ligne de manière générale. Bien que kubectl-validate ne s&amp;rsquo;appuie pas sur les JSON schemas, les principes généraux de la validation de resources s&amp;rsquo;appliquent aussi a l&amp;rsquo;outil.</description></item><item><title>Validating Kubernetes resources offline - kubeval review</title><link>https://fence-io.github.io/website/.pr/83/articles/k8s-resources-validation/kubeval/</link><pubDate>Sun, 05 May 2024 00:00:00 +0000</pubDate><guid>https://fence-io.github.io/website/.pr/83/articles/k8s-resources-validation/kubeval/</guid><description>In this article, we will discuss validating Kubernetes resource definitions using the tool kubeval.
Before we begin, it&amp;rsquo;s important to note that kubeval is no longer maintained, and the author advises migrating to kubeconform. We will explore kubeconform in the next article.
Introduction # Validating Kubernetes resources is very useful for detecting non-compliant resources before applying them to a cluster. The most common use case is to perform validation during CI to validate (or invalidate) the quality of a pull request.</description></item></channel></rss>